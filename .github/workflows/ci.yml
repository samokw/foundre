name: CI (lint/build/tests + coverage)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  portal:
    name: Portal (lint / build / tests)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 20           # change to 22 if you want latest LTS
          cache: pnpm
          cache-dependency-path: portal/pnpm-lock.yaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 9

      - name: Install deps (portal)
        working-directory: portal
        run: pnpm install --frozen-lockfile

      - name: Lint (portal)
        working-directory: portal
        run: pnpm lint

      - name: Build (portal)
        working-directory: portal
        run: pnpm build

      - name: Test (portal)
        working-directory: portal
        run: pnpm test || echo "No portal tests yet"
  go:
    name: Go (build / vet / lint / test + coverage)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version: '1.25.x'
          check-latest: true

      # --- Build & vet (api) ---
      - name: Build (api)
        working-directory: api
        run: go build ./...

      - name: Vet (api)
        working-directory: api
        run: go vet ./...

      # --- Build & vet (worker) ---
      - name: Build (worker)
        working-directory: worker
        run: go build ./...

      - name: Vet (worker)
        working-directory: worker
        run: go vet ./...

      # --- Lint ---
      - name: golangci-lint (api)
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v2.4.0
          working-directory: api
          args: --timeout=5m

      - name: golangci-lint (worker)
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v2.4.0
          working-directory: worker
          args: --timeout=5m

      # --- Tests + coverage summaries ---
      - name: Test + coverage (api)
        working-directory: api
        run: |
          go test ./... -coverprofile=coverage.out -covermode=atomic
          go tool cover -func=coverage.out | tee coverage.txt

      - name: Test + coverage (worker)
        working-directory: worker
        run: |
          go test ./... -coverprofile=coverage.out -covermode=atomic
          go tool cover -func=coverage.out | tee coverage.txt

      - name: Coverage summary
        shell: bash
        run: |
          {
            echo "## Go coverage summary"
            if [ -f api/coverage.txt ]; then
              echo "### api"
              tail -n 1 api/coverage.txt
            else
              echo "### api"
              echo "(no coverage file)"
            fi
            echo
            if [ -f worker/coverage.txt ]; then
              echo "### worker"
              tail -n 1 worker/coverage.txt
            else
              echo "### worker"
              echo "(no coverage file)"
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: go-coverage
          path: |
            api/coverage.out
            api/coverage.txt
            worker/coverage.out
            worker/coverage.txt
